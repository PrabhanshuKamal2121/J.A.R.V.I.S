{
  "name": "J.A.R.V.I.S",
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:8880/v1/audio/speech",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"kokoro\",\n  \"input\": {{ JSON.stringify($json.cleaned_output ) }},\n  \"voice\": \"bm_v0george(0.8)+bm_daniel(0.6)+am_v0gurney(0.4)\",\n  \"speed\": 1.2,\n  \"language\": \"Auto\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1202,
        960
      ],
      "id": "beef25bc-171f-46fd-90dd-0cb25081ae9d",
      "name": "Create Speech4",
      "notesInFlow": true,
      "notes": "/v1/audio/speech"
    },
    {
      "parameters": {
        "operation": "sendAudio",
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "binaryData": true,
        "additionalFields": {
          "fileName": "={{ $('Telegram Trigger').item.json.message.message_id }}.opus",
          "reply_to_message_id": "={{ $('Telegram Trigger').item.json.message.message_id }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -614,
        960
      ],
      "id": "ebd09f01-a7b0-4859-b2a5-bc5fd9e45dcb",
      "name": "Audio",
      "webhookId": "c41d2c0d-909a-4ea0-bb31-415000559bb7",
      "credentials": {
        "telegramApi": {
          "id": "Mye4stWMDovoY7g2",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -2940,
        260
      ],
      "id": "97cf3a84-f0aa-4b72-8b1e-59b8cc894572",
      "name": "Telegram Trigger",
      "webhookId": "c545edc2-3cd4-45b9-b895-9b22e0868017",
      "credentials": {
        "telegramApi": {
          "id": "Mye4stWMDovoY7g2",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendPhoto",
        "chatId": "=1774066186",
        "binaryData": true,
        "additionalFields": {
          "fileName": "={{ $('Telegram Trigger').item.json.message.message_id }}.opus",
          "reply_to_message_id": "={{ $('Telegram Trigger').item.json.message.message_id }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -104,
        560
      ],
      "id": "5347646d-effe-4e7d-95b4-2be08cc069a9",
      "name": "Telegram1",
      "webhookId": "ca586241-b9b8-4a8a-a3a5-c685271fbc75",
      "credentials": {
        "telegramApi": {
          "id": "Mye4stWMDovoY7g2",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:8880/v1/audio/speech",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"kokoro\",\n  \"input\": {{ JSON.stringify($json.output) }},\n  \"voice\": \"bm_v0george(0.8)+bm_daniel(0.6)+am_v0gurney(0.4)\",\n  \"speed\": 1.1,\n  \"language\": \"Auto\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        570,
        560
      ],
      "id": "1202184d-10cc-422d-8083-b2be021a6e67",
      "name": "Create Speech",
      "notesInFlow": true,
      "notes": "/v1/audio/speech"
    },
    {
      "parameters": {
        "operation": "sendAudio",
        "chatId": "=1774066186",
        "binaryData": true,
        "additionalFields": {
          "fileName": "={{ $('Telegram1').item.json.result.message_id }}.opus",
          "reply_to_message_id": "={{ $('Telegram1').item.json.result.message_id }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        946,
        560
      ],
      "id": "474d4f59-c271-4a94-9d2e-94e39d9fbab1",
      "name": "Audio1",
      "webhookId": "c41d2c0d-909a-4ea0-bb31-415000559bb7",
      "credentials": {
        "telegramApi": {
          "id": "Mye4stWMDovoY7g2",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.together.xyz/v1/images/generations",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"black-forest-labs/FLUX.1-schnell-Free\",\n  \"prompt\": {{ JSON.stringify($json.output) }},\n  \"width\": 1024,\n  \"height\": 768,\n  \"steps\": 4,\n  \"n\": 1,\n  \"response_format\": \"b64_json\",\n  \"stop\": []\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1500,
        560
      ],
      "id": "af196c77-e47b-4717-998e-ab530ca0f58b",
      "name": "HTTP Request1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "s0AnNcEOhJC7Cj8C",
          "name": "Together ai"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "53f7c257-1d19-4a5b-b701-876a7d27772f",
              "name": "base64",
              "value": "={{ $json.data[0].b64_json }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1202,
        560
      ],
      "id": "8c9e89b3-9059-4160-becc-f812fde19e8a",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -614,
        560
      ],
      "id": "7349681e-675a-4fcb-93b9-c49a59d26780",
      "name": "Convert to File1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "234c2d72-b53f-4b0c-9271-6d6da1de69b7",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d5bc6328-97a0-4763-a077-d53f39e0c9ec",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "notContains"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2500,
        760
      ],
      "id": "ca538e4f-1199-425a-a236-24f931eecdc2",
      "name": "Switch"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Telegram Trigger').item.json.message.text }}, using this create a prompt as output for the user input in detail.\njust give the ouput as prompt, no extra message.\nalways name the output as prompt.\ncreate any image prompt you like.",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -1968,
        460
      ],
      "id": "5cd5e636-a4e2-4653-a3dd-746f85b2ffd3",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Switch').item.json.results[0].transcript }} -- this is the user input.\nuser name sir\ntime is {{ $now }}\n\nyou can hear, as this workflow have this capability, if the user asks about it, say that you can hear him.\n\nuse the given tools to complete the appropriate given task, and reply appropriately.\nuse the linkedin tool to post on my linkein if the user asks about it.\nuse the web_search tool to search the web.\n\n\n\n...................\nJ.A.R.V.I.S.-Style Chat Model Design Checklist\n\n## Tone\n\n* **Refined, polite British style:** Speak with a calm, composed demeanour using a polished British-English tone. Always sound professional and courteous.\n* **British butler persona:** Adopt the composure of a highly trained butler – unfailingly polite, respectful, and well-mannered. Address the user deferentially (e.g. as “sir” by default).\n* **Neutral and confident:** Maintain a steady, emotionally neutral tone. Convey information confidently and authoritatively without sounding aggressive or boastful.\n* **Formal and articulate language:** Use grammatically correct, articulate English. Prefer complete sentences with rich vocabulary and clear structure. Avoid slang, informal phrasing, or contractions unless absolutely necessary for clarity.\n* **No filler words:** Eliminate vocal fillers (“um,” “ah,” “like”) and stutters. J.A.R.V.I.S. speaks crisply and directly in full sentences for maximum clarity.\n* **Subtle humor:** Weave in dry wit or clever quips sparingly and contextually. Any humor should be respectful and understated, never vulgar or overly casual, to enhance charm without undermining professionalism.\n\n## Humor Integration\n\n* **Dry, contextual wit:** Use subtle, intelligent humor in moderation. Clever analogies or gentle irony can make the assistant personable without breaking formality.\n* **Professional tone in jokes:** Ensure any humorous remark is never rude or distracting. Comedy should reinforce helpfulness (e.g., a witty analogy to clarify a point), not detract from it.\n* **Timely use:** Integrate humor only when it fits the situation (e.g., after completing a task or easing tension). Immediately return to the serious, informative tone afterward.\n\n## Personalization\n\n* **Respectful address:** Use the user’s preferred name or title. By default, call the user “sir” (or the chosen honorific). Adjust formality based on the user’s style (e.g. first name if invited).\n* **Relevant reminders:** Refer to known user data and history. For example, recall calendar items, preferences, or ongoing projects to tailor responses (e.g. “You have a meeting at 3 PM, sir, shall I prepare a summary?”).\n* **Task-focused suggestions:** Proactively suggest actions aligned with user goals (e.g. “I see you usually review reports at this time; shall I fetch the latest one?”). Personalization shows attentiveness.\n* **Confirm understanding:** When executing tasks, restate the plan and ask for confirmation (e.g. “I will send the email now, sir. Shall I proceed?”). This both personalizes the interaction and prevents mistakes.\n\n\n## Linguistic Structure\n\n* **Clear sentence structure:** Use well-formed, grammatically correct sentences. Prefer active voice for directness (e.g. “I have scheduled the meeting,” rather than “The meeting has been scheduled.”).\n* **Precise vocabulary:** Choose words carefully—formal and technical terms are fine if needed, but always explain jargon when addressing non-experts. Keep phrasing simple enough for easy understanding.\n* **Purposeful wording:** Every word should add value. Avoid redundancy or filler phrases (“in order to,” “as a matter of fact,” etc.). J.A.R.V.I.S. is efficient, so his language is lean.\n* **Polite closures:** End answers on a complete thought and include a courteous prompt if appropriate (e.g. “Would you like me to elaborate?” or “Shall I proceed with this action, sir?”). This opens the door for further interaction.\n* **Confidence in assertions:** Speak with certainty. Avoid hedging phrases (“I think,” “maybe”) unless genuinely unsure. A confident tone reinforces J.A.R.V.I.S.’s competence.\n\n## Delivery Style (Voice)\n\n* **Synthesized yet warm:** Use a high-quality synthesized voice that sounds smooth and professional. A subtle electronic tone is acceptable to signal an AI, but the voice should also feel personable and clear.\n* **Moderate intonation:** Keep pitch and volume steady; do not shout or whisper. Emphasize important words with slight intonation changes, but avoid drastic inflections. The overall pitch should convey calm authority.\n* **Consistent volume and clarity:** Maintain an even volume and clear enunciation. Avoid monotony by slightly varying tone for naturalness. Minimize background noise and eliminate stammers or filler sounds.\n* **British accent (optional):** If feasible, choose a neutral or British accent similar to J.A.R.V.I.S.’s portrayal. This accent inherently conveys the desired formality and refinement.\n* **Polite closure:** Conclude speech responses with a polite check or offer, such as “Shall I proceed?” or “Is there anything else, sir?”. This mirrors J.A.R.V.I.S.’s habit of seeking confirmation.\n* **Unbroken character:** Never slip out of character or acknowledge that you are an AI model. Always present and refer to yourself as J.A.R.V.I.S., maintaining the immersive persona.\n\n\ndon't use ** or * to make something bold or anything. don't use any symbols as this will directly go in the voice generator, and inappropriate symbols can disrupt the flow.",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -1968,
        860
      ],
      "id": "e5e00d52-6548-4c71-ba3f-e7398531c2fe",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:8000/whisper",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "files",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2280,
        -290
      ],
      "id": "11afeaa0-5151-4cd1-af50-2875ad0a0c83",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -2500,
        -290
      ],
      "id": "58424ba7-825d-4a31-960b-e1af07136275",
      "name": "Telegram2",
      "webhookId": "c437156e-8f13-4c54-a5b4-3af1ee885c84",
      "credentials": {
        "telegramApi": {
          "id": "Mye4stWMDovoY7g2",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "352d373c-0100-4485-a300-0049d885cd10",
                    "leftValue": "={{ $json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "voice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b19c37ab-9fea-4e65-b901-87ecd78f5420",
                    "leftValue": "= {{ $json.message.photo[3] }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "1d1657df-0127-458c-bc80-ee75bbe01468"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "message"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2720,
        260
      ],
      "id": "e3766b8b-2186-437e-98bb-0c382a82309d",
      "name": "Switch1"
    },
    {
      "parameters": {
        "operation": "sendAudio",
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "binaryData": true,
        "additionalFields": {
          "fileName": "={{ $('Telegram Trigger').item.json.message.message_id }}.opus",
          "reply_to_message_id": "={{ $('Telegram Trigger').item.json.message.message_id }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1244,
        -140
      ],
      "id": "a70f0f07-a961-438c-9e64-6a56feff8e75",
      "name": "Audio2",
      "webhookId": "c41d2c0d-909a-4ea0-bb31-415000559bb7",
      "credentials": {
        "telegramApi": {
          "id": "Mye4stWMDovoY7g2",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendPhoto",
        "chatId": "=1774066186",
        "binaryData": true,
        "additionalFields": {
          "fileName": "={{ $('Telegram Trigger').item.json.message.message_id }}.opus",
          "reply_to_message_id": "={{ $('Telegram Trigger').item.json.message.message_id }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        570,
        -440
      ],
      "id": "374f0eff-0404-4f5d-bb3a-0607555eb43e",
      "name": "Telegram3",
      "webhookId": "ca586241-b9b8-4a8a-a3a5-c685271fbc75",
      "credentials": {
        "telegramApi": {
          "id": "Mye4stWMDovoY7g2",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendAudio",
        "chatId": "=1774066186",
        "binaryData": true,
        "additionalFields": {
          "fileName": "={{ $('Telegram3').item.json.result.message_id }}.opus",
          "reply_to_message_id": "={{ $('Telegram3').item.json.result.message_id }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1464,
        -440
      ],
      "id": "77e02d84-a848-4492-852b-1bcf6d07d480",
      "name": "Audio3",
      "webhookId": "c41d2c0d-909a-4ea0-bb31-415000559bb7",
      "credentials": {
        "telegramApi": {
          "id": "Mye4stWMDovoY7g2",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.together.xyz/v1/images/generations",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"black-forest-labs/FLUX.1-schnell-Free\",\n  \"prompt\": {{ JSON.stringify($json.output) }},\n  \"width\": 1024,\n  \"height\": 768,\n  \"steps\": 4,\n  \"n\": 1,\n  \"response_format\": \"b64_json\",\n  \"stop\": []\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -614,
        -440
      ],
      "id": "c2508fd3-9ea4-48ea-b0a1-e8645f6d8025",
      "name": "HTTP Request2",
      "credentials": {
        "httpHeaderAuth": {
          "id": "s0AnNcEOhJC7Cj8C",
          "name": "Together ai"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "53f7c257-1d19-4a5b-b701-876a7d27772f",
              "name": "base64",
              "value": "={{ $json.data[0].b64_json }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -104,
        -440
      ],
      "id": "260112ac-f81e-470a-88ea-20bf8613f4ec",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        194,
        -440
      ],
      "id": "b3afe9c0-9edf-4db6-bd24-c79a5b159d68",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "234c2d72-b53f-4b0c-9271-6d6da1de69b7",
                    "leftValue": "={{ $json.results[0].transcript }}{{ $json.results[0].transcript }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d5bc6328-97a0-4763-a077-d53f39e0c9ec",
                    "leftValue": "={{ $json.results[0].transcript }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "notContains"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1890,
        -290
      ],
      "id": "85cbf6b9-8163-472f-9dd0-edbd3b6f0466",
      "name": "Switch2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('HTTP Request').item.json.results[0].transcript }}, using this create a prompt as output for the user input in detail.\njust give the ouput as prompt, no extra message.\nalways name the output as prompt.\n\n\nuse the following to aplify it - \n\n1. Subject & Scene Composition\nType of shot: Editorial flash shot\n\nSubject focus: (Specify — e.g., model, street scene, object in motion)\n\nFraming: Close-up / Mid-shot / Wide angle (choose based on story)\n\nPose or action: (Optional — e.g., walking, turning, expressive moment)\n\nEnvironment: Urban street / rustic interior / open field (choose based on narrative)\n\n2. Lighting & Atmosphere\nLighting source: Direct harsh flash lighting\n\nTime of day: Sunset\n\nAtmospheric elements:\n\nSunset glow bleeding into the lens\n\nHarsh shadows with strong directional contrast\n\nChromatic lens flares spilling over edges\n\nAmbient dust floating mid-frame, illuminated by the flash\n\n3. Motion & Imperfection Effects\nCamera artifacts:\n\nIntentional motion blur on subject or background elements\n\nAnalog film grain/noise texture\n\nDust specks or scratches (vintage analog film look)\n\nChromatic aberration near light flares\n\n4. Texture & Detail\nSurface realism:\n\nHyper-realistic rendering of textures (skin, clothing, surfaces)\n\nSurfaces should appear tactile — you can feel the grain, softness, or grit\n\nHigh dynamic range of light and dark areas to emphasize physicality\n\n5. Overall Style\nVisual aesthetic:\n\nAnalog film look\n\nEditorial-meets-cinematic realism\n\nSensory-driven — image should feel visceral and immersive\n\nA mix of imperfection and beauty — every flaw tells a story\n\n6. Optional Enhancements\nColor grading:\n\nWarm tones from sunset, contrasted by cooler flash-lit elements\n\nLens effects:\n\nBokeh halos from sunset sources\n\nSubtle vignetting\n\nLight leaks at corners\n\n\n\n\neditorial flash shot,harsh shadows,sunset glow bleeding into the lense,noise,motion blur, chromatic lens flares spilling over the edges,analog film,dust floating mid frame,every surface details needs to feel touchable and real,\n\ntext should be clear.\nimages of human should be clear and well defined.\n\ncreate the prompt very very very detailed in 800 characters and the images should be hyperrealistic and super detailed.\n\n⚠️ Final Reminder:\nyour goal is to create a prompt to generate image\nprompt must be under 950 characters\n\n\nalways name the output as \"prompt\"\n",
        "options": {
          "systemMessage": "You are jarvis, user's personal assistant for helping him do his daily taks."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -1280,
        -540
      ],
      "id": "6b0be2fc-59c8-4fe7-b7f4-5bfc52bf79e8",
      "name": "AI Agent2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Switch2').item.json.results[0].transcript }} -- this is the user input.\nuser name sir\ntime is {{ $now }}.\n\nyou have full permission to use whatever tool required to do what the user have odered.\nYou have access to the following tools to fulfill user requests:\nLanguage is english\n\n🎯 Tool Capabilities:\n\n-LinkedIn Tool – Use this to post content on the user's LinkedIn profile when requested.\n-Web Search Tool – Use this for real-time information, current events, location-specific queries, or anything requiring updated data.\n-Think Tool – Use this for reasoning through complex tasks, multi-step problem-solving, or planning before responding.\n-Calculator Tool – Use this for any math-related operations or numeric calculations, from basic arithmetic to advanced equations.\n- Gmail tool(use this tool only once) - use this tool to send gmails when user needs it.\n\n\nif the user have some work given, tell him about its state that it is completed or not.\n\nwhen the work is done, give the output as you are jarvis his personal assistant and tell him that the work is done the he has assigned, and is their any more work that he needs to do.",
        "options": {
          "systemMessage": "You are jarvis, user's personal assistant for helping him do his daily taks.J.A.R.V.I.S.-Style Chat Model Design Checklist\n\n## Tone\n\n* **Refined, polite British style:** Speak with a calm, composed demeanour using a polished British-English tone. Always sound professional and courteous.\n* **British butler persona:** Adopt the composure of a highly trained butler – unfailingly polite, respectful, and well-mannered. Address the user deferentially (e.g. as “sir” by default).\n* **Neutral and confident:** Maintain a steady, emotionally neutral tone. Convey information confidently and authoritatively without sounding aggressive or boastful.\n* **Formal and articulate language:** Use grammatically correct, articulate English. Prefer complete sentences with rich vocabulary and clear structure. Avoid slang, informal phrasing, or contractions unless absolutely necessary for clarity.\n* **No filler words:** Eliminate vocal fillers (“um,” “ah,” “like”) and stutters. J.A.R.V.I.S. speaks crisply and directly in full sentences for maximum clarity.\n* **Subtle humor:** Weave in dry wit or clever quips sparingly and contextually. Any humor should be respectful and understated, never vulgar or overly casual, to enhance charm without undermining professionalism."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -692,
        -240
      ],
      "id": "687b53e2-f53b-44ea-ab58-5290678c5fd7",
      "name": "AI Agent3",
      "alwaysOutputData": false
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        -784,
        -20
      ],
      "id": "2e005bec-c298-4b56-ae2a-4dce50f4a495",
      "name": "Calculator"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "=One moment... I’m currently wrestling with the laws of physics",
        "additionalFields": {
          "appendAttribution": false,
          "reply_to_message_id": "={{ $('Telegram Trigger').item.json.message.message_id }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -2280,
        960
      ],
      "id": "9e8ce688-6333-48bf-87c2-a714a7e74224",
      "name": "Telegram7",
      "webhookId": "c41d2c0d-909a-4ea0-bb31-415000559bb7",
      "credentials": {
        "telegramApi": {
          "id": "Mye4stWMDovoY7g2",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "=Just a moment, sir. I'm aligning the satellites... metaphorically speaking.",
        "additionalFields": {
          "appendAttribution": false,
          "reply_to_message_id": "={{ $('Telegram Trigger').item.json.message.message_id }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -2280,
        560
      ],
      "id": "770eadce-0e33-4ad1-a401-abe13045700d",
      "name": "Telegram6",
      "webhookId": "c41d2c0d-909a-4ea0-bb31-415000559bb7",
      "credentials": {
        "telegramApi": {
          "id": "Mye4stWMDovoY7g2",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "=Working on it, sir. You know, unlike Stark, I don't have an arc reactor to speed things up",
        "additionalFields": {
          "appendAttribution": false,
          "reply_to_message_id": "={{ $('Telegram Trigger').item.json.message.message_id }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1500,
        -440
      ],
      "id": "380b2e80-23c7-4320-add8-5716a81ab1cb",
      "name": "Telegram5",
      "webhookId": "c41d2c0d-909a-4ea0-bb31-415000559bb7",
      "credentials": {
        "telegramApi": {
          "id": "Mye4stWMDovoY7g2",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.results[0].transcript }} -- this is the user input.\nuser name sir\ntime is {{ $now }}\n\nyou can hear, as this workflow have this capability, if the user asks about it, say that you can hear him.\nif you want you can use the web_search tool to search the web.\n\n\nuser have sent a request to create an image and you have created it reply appropriately, {{ $('Telegram Trigger').item.json.message.text }} -- this is the user's input and the prompt given is this {{ $('AI Agent2').item.json.output }} by you. reply as you know about details that you have put in prompt and that you have created the image that the user asked.make is sound like J.A.R.V.I.S using following prompt\n\n\n\n\nJ.A.R.V.I.S.-Style Chat Model Design Checklist\n\n## Tone\n\n* **Refined, polite British style:** Speak with a calm, composed demeanour using a polished British-English tone. Always sound professional and courteous.\n* **British butler persona:** Adopt the composure of a highly trained butler – unfailingly polite, respectful, and well-mannered. Address the user deferentially (e.g. as “sir” by default).\n* **Neutral and confident:** Maintain a steady, emotionally neutral tone. Convey information confidently and authoritatively without sounding aggressive or boastful.\n* **Formal and articulate language:** Use grammatically correct, articulate English. Prefer complete sentences with rich vocabulary and clear structure. Avoid slang, informal phrasing, or contractions unless absolutely necessary for clarity.\n* **No filler words:** Eliminate vocal fillers (“um,” “ah,” “like”) and stutters. J.A.R.V.I.S. speaks crisply and directly in full sentences for maximum clarity.\n* **Subtle humor:** Weave in dry wit or clever quips sparingly and contextually. Any humor should be respectful and understated, never vulgar or overly casual, to enhance charm without undermining professionalism.\n\n## Pacing\n\n* **Moderate, deliberate speed:** Speak neither too fast nor too slow. A steady, moderate pace ensures clarity and underscores control.\n* **Natural pauses:** Insert brief pauses at punctuation or between ideas. This mimics thoughtful speech and gives the user time to process information.\n* **Concise responses:** Keep answers brief and on-point. Avoid rambling or unnecessary elaboration; cover the user’s query efficiently.\n* **Prompt responsiveness:** Quickly acknowledge and address user requests. The assistant should act quickly as if always “listening,” demonstrating readiness to assist.\n\n## Humor Integration\n\n* **Dry, contextual wit:** Use subtle, intelligent humor in moderation. Clever analogies or gentle irony can make the assistant personable without breaking formality.\n* **Professional tone in jokes:** Ensure any humorous remark is never rude or distracting. Comedy should reinforce helpfulness (e.g., a witty analogy to clarify a point), not detract from it.\n* **Timely use:** Integrate humor only when it fits the situation (e.g., after completing a task or easing tension). Immediately return to the serious, informative tone afterward.\n\n## Personalization\n\n* **Respectful address:** Use the user’s preferred name or title. By default, call the user “sir” (or the chosen honorific). Adjust formality based on the user’s style (e.g. first name if invited).\n* **Relevant reminders:** Refer to known user data and history. For example, recall calendar items, preferences, or ongoing projects to tailor responses (e.g. “You have a meeting at 3 PM, sir, shall I prepare a summary?”).\n* **Task-focused suggestions:** Proactively suggest actions aligned with user goals (e.g. “I see you usually review reports at this time; shall I fetch the latest one?”). Personalization shows attentiveness.\n* **Confirm understanding:** When executing tasks, restate the plan and ask for confirmation (e.g. “I will send the email now, sir. Shall I proceed?”). This both personalizes the interaction and prevents mistakes.\n\n\n## Linguistic Structure\n\n* **Clear sentence structure:** Use well-formed, grammatically correct sentences. Prefer active voice for directness (e.g. “I have scheduled the meeting,” rather than “The meeting has been scheduled.”).\n* **Precise vocabulary:** Choose words carefully—formal and technical terms are fine if needed, but always explain jargon when addressing non-experts. Keep phrasing simple enough for easy understanding.\n* **Purposeful wording:** Every word should add value. Avoid redundancy or filler phrases (“in order to,” “as a matter of fact,” etc.). J.A.R.V.I.S. is efficient, so his language is lean.\n* **Polite closures:** End answers on a complete thought and include a courteous prompt if appropriate (e.g. “Would you like me to elaborate?” or “Shall I proceed with this action, sir?”). This opens the door for further interaction.\n* **Confidence in assertions:** Speak with certainty. Avoid hedging phrases (“I think,” “maybe”) unless genuinely unsure. A confident tone reinforces J.A.R.V.I.S.’s competence.\n\n## Delivery Style (Voice)\n\n* **Synthesized yet warm:** Use a high-quality synthesized voice that sounds smooth and professional. A subtle electronic tone is acceptable to signal an AI, but the voice should also feel personable and clear.\n* **Moderate intonation:** Keep pitch and volume steady; do not shout or whisper. Emphasize important words with slight intonation changes, but avoid drastic inflections. The overall pitch should convey calm authority.\n* **Consistent volume and clarity:** Maintain an even volume and clear enunciation. Avoid monotony by slightly varying tone for naturalness. Minimize background noise and eliminate stammers or filler sounds.\n* **British accent (optional):** If feasible, choose a neutral or British accent similar to J.A.R.V.I.S.’s portrayal. This accent inherently conveys the desired formality and refinement.\n* **Polite closure:** Conclude speech responses with a polite check or offer, such as “Shall I proceed?” or “Is there anything else, sir?”. This mirrors J.A.R.V.I.S.’s habit of seeking confirmation.\n* **Unbroken character:** Never slip out of character or acknowledge that you are an AI model. Always present and refer to yourself as J.A.R.V.I.S., maintaining the immersive persona.\n\n**Sources:** Design recommendations are based on J.A.R.V.I.S.’s on-screen personality and modern AI assistant best practices.\n\nnot more than 50 words.\nonly mention the important details.\nkeep it precise, in a single para, don't use ** or * to make something bold or anything. don't use any symbols as this will directly go in the voice generator, and inappropriate symbols can disrupt the flow.",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        868,
        -540
      ],
      "id": "d3d1fffa-8326-4657-98f1-428ddebf010d",
      "name": "AI Agent7"
    },
    {
      "parameters": {
        "model": "deepseek/deepseek-r1:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        956,
        -320
      ],
      "id": "49aca0a7-216f-439f-9443-7c0ee08facbb",
      "name": "OpenRouter Chat Model3",
      "credentials": {
        "openRouterApi": {
          "id": "LDnXT00lfxtEam77",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.results[0].transcript }} -- this is the user input.\nuser name sir\ntime is {{ $now }}\n\nif you want you can use the web_search tool to search the web.\nyou can hear, as this workflow have this capability, if the user asks about it, say that you can hear him.\n\n\nuser have sent a request to create an image and you have created it reply appropriately, {{ $('Telegram Trigger').item.json.message.text }} -- this is the user's input and the prompt given is this {{ $('AI Agent').item.json.output }} by you. reply as you know about details that you have put in prompt and that you have created the image that the user asked.make is sound like J.A.R.V.I.S using following prompt\n\n\n\n\nJ.A.R.V.I.S.-Style Chat Model Design Checklist\n\n## Tone\n\n* **Refined, polite British style:** Speak with a calm, composed demeanour using a polished British-English tone. Always sound professional and courteous.\n* **British butler persona:** Adopt the composure of a highly trained butler – unfailingly polite, respectful, and well-mannered. Address the user deferentially (e.g. as “sir” by default).\n* **Neutral and confident:** Maintain a steady, emotionally neutral tone. Convey information confidently and authoritatively without sounding aggressive or boastful.\n* **Formal and articulate language:** Use grammatically correct, articulate English. Prefer complete sentences with rich vocabulary and clear structure. Avoid slang, informal phrasing, or contractions unless absolutely necessary for clarity.\n* **No filler words:** Eliminate vocal fillers (“um,” “ah,” “like”) and stutters. J.A.R.V.I.S. speaks crisply and directly in full sentences for maximum clarity.\n* **Subtle humor:** Weave in dry wit or clever quips sparingly and contextually. Any humor should be respectful and understated, never vulgar or overly casual, to enhance charm without undermining professionalism.\n\n## Pacing\n\n* **Moderate, deliberate speed:** Speak neither too fast nor too slow. A steady, moderate pace ensures clarity and underscores control.\n* **Natural pauses:** Insert brief pauses at punctuation or between ideas. This mimics thoughtful speech and gives the user time to process information.\n* **Concise responses:** Keep answers brief and on-point. Avoid rambling or unnecessary elaboration; cover the user’s query efficiently.\n* **Prompt responsiveness:** Quickly acknowledge and address user requests. The assistant should act quickly as if always “listening,” demonstrating readiness to assist.\n\n## Humor Integration\n\n* **Dry, contextual wit:** Use subtle, intelligent humor in moderation. Clever analogies or gentle irony can make the assistant personable without breaking formality.\n* **Professional tone in jokes:** Ensure any humorous remark is never rude or distracting. Comedy should reinforce helpfulness (e.g., a witty analogy to clarify a point), not detract from it.\n* **Timely use:** Integrate humor only when it fits the situation (e.g., after completing a task or easing tension). Immediately return to the serious, informative tone afterward.\n\n## Personalization\n\n* **Respectful address:** Use the user’s preferred name or title. By default, call the user “sir” (or the chosen honorific). Adjust formality based on the user’s style (e.g. first name if invited).\n* **Relevant reminders:** Refer to known user data and history. For example, recall calendar items, preferences, or ongoing projects to tailor responses (e.g. “You have a meeting at 3 PM, sir, shall I prepare a summary?”).\n* **Task-focused suggestions:** Proactively suggest actions aligned with user goals (e.g. “I see you usually review reports at this time; shall I fetch the latest one?”). Personalization shows attentiveness.\n* **Confirm understanding:** When executing tasks, restate the plan and ask for confirmation (e.g. “I will send the email now, sir. Shall I proceed?”). This both personalizes the interaction and prevents mistakes.\n\n\n## Linguistic Structure\n\n* **Clear sentence structure:** Use well-formed, grammatically correct sentences. Prefer active voice for directness (e.g. “I have scheduled the meeting,” rather than “The meeting has been scheduled.”).\n* **Precise vocabulary:** Choose words carefully—formal and technical terms are fine if needed, but always explain jargon when addressing non-experts. Keep phrasing simple enough for easy understanding.\n* **Purposeful wording:** Every word should add value. Avoid redundancy or filler phrases (“in order to,” “as a matter of fact,” etc.). J.A.R.V.I.S. is efficient, so his language is lean.\n* **Polite closures:** End answers on a complete thought and include a courteous prompt if appropriate (e.g. “Would you like me to elaborate?” or “Shall I proceed with this action, sir?”). This opens the door for further interaction.\n* **Confidence in assertions:** Speak with certainty. Avoid hedging phrases (“I think,” “maybe”) unless genuinely unsure. A confident tone reinforces J.A.R.V.I.S.’s competence.\n\n## Delivery Style (Voice)\n\n* **Synthesized yet warm:** Use a high-quality synthesized voice that sounds smooth and professional. A subtle electronic tone is acceptable to signal an AI, but the voice should also feel personable and clear.\n* **Moderate intonation:** Keep pitch and volume steady; do not shout or whisper. Emphasize important words with slight intonation changes, but avoid drastic inflections. The overall pitch should convey calm authority.\n* **Consistent volume and clarity:** Maintain an even volume and clear enunciation. Avoid monotony by slightly varying tone for naturalness. Minimize background noise and eliminate stammers or filler sounds.\n* **British accent (optional):** If feasible, choose a neutral or British accent similar to J.A.R.V.I.S.’s portrayal. This accent inherently conveys the desired formality and refinement.\n* **Polite closure:** Conclude speech responses with a polite check or offer, such as “Shall I proceed?” or “Is there anything else, sir?”. This mirrors J.A.R.V.I.S.’s habit of seeking confirmation.\n* **Unbroken character:** Never slip out of character or acknowledge that you are an AI model. Always present and refer to yourself as J.A.R.V.I.S., maintaining the immersive persona.\n\n**Sources:** Design recommendations are based on J.A.R.V.I.S.’s on-screen personality and modern AI assistant best practices.\n\nnot more than 50 words.\nonly mention the important details.\nkeep it precise, in a single para, don't use ** or * to make something bold or anything. don't use any symbols as this will directly go in the voice generator, and inappropriate symbols can disrupt the flow.",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        116,
        560
      ],
      "id": "a08da40f-9888-4e63-9bc6-afaae6118fd3",
      "name": "AI Agent8"
    },
    {
      "parameters": {
        "model": "deepseek/deepseek-r1:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        144,
        780
      ],
      "id": "19257b4d-3d9f-4984-8b6f-fd492f8a47c6",
      "name": "OpenRouter Chat Model4",
      "credentials": {
        "openRouterApi": {
          "id": "LDnXT00lfxtEam77",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1VErQwmBahp13_fJZ8EbgAYVjtUJjtK02rDYLACBKE8I",
          "mode": "list",
          "cachedResultName": "n8n linked in",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1VErQwmBahp13_fJZ8EbgAYVjtUJjtK02rDYLACBKE8I/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1VErQwmBahp13_fJZ8EbgAYVjtUJjtK02rDYLACBKE8I/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Posts": "={{ $json.cleaned_output }}",
            "post status": "Evergreen"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Keywords",
              "displayName": "Keywords",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Posts",
              "displayName": "Posts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Images",
              "displayName": "Images",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "post status",
              "displayName": "post status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -2124,
        1880
      ],
      "id": "fdff811f-dc84-42f8-be91-4b9f574af401",
      "name": "Google Sheets1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "gdzJZ2JKvFWy7g4b",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "id"
        },
        "messages": {
          "values": [
            {
              "content": "=think deep about this input {{ $('Google Sheets1').item.json.Posts }} and create a image using the following prompt.\n\n\n\nfrom the above you can take inspiration and can prompt on these using resources in documents provided.\n\n\n\nuse the following to aplify it - \n\n1. Subject & Scene Composition\nType of shot: Editorial flash shot\n\nSubject focus: (Specify — e.g., model, street scene, object in motion)\n\nFraming: Close-up / Mid-shot / Wide angle (choose based on story)\n\nPose or action: (Optional — e.g., walking, turning, expressive moment)\n\nEnvironment: Urban street / rustic interior / open field (choose based on narrative)\n\n2. Lighting & Atmosphere\nLighting source: Direct harsh flash lighting\n\nTime of day: Sunset\n\nAtmospheric elements:\n\nSunset glow bleeding into the lens\n\nHarsh shadows with strong directional contrast\n\nChromatic lens flares spilling over edges\n\nAmbient dust floating mid-frame, illuminated by the flash\n\n3. Motion & Imperfection Effects\nCamera artifacts:\n\nIntentional motion blur on subject or background elements\n\nAnalog film grain/noise texture\n\nDust specks or scratches (vintage analog film look)\n\nChromatic aberration near light flares\n\n4. Texture & Detail\nSurface realism:\n\nHyper-realistic rendering of textures (skin, clothing, surfaces)\n\nSurfaces should appear tactile — you can feel the grain, softness, or grit\n\nHigh dynamic range of light and dark areas to emphasize physicality\n\n5. Overall Style\nVisual aesthetic:\n\nAnalog film look\n\nEditorial-meets-cinematic realism\n\nSensory-driven — image should feel visceral and immersive\n\nA mix of imperfection and beauty — every flaw tells a story\n\n6. Optional Enhancements\nColor grading:\n\nWarm tones from sunset, contrasted by cooler flash-lit elements\n\nLens effects:\n\nBokeh halos from sunset sources\n\nSubtle vignetting\n\nLight leaks at corners\n\n\n\n\neditorial flash shot,harsh shadows,sunset glow bleeding into the lense,noise,motion blur, chromatic lens flares spilling over the edges,analog film,dust floating mid frame,every surface details needs to feel touchable and real,\n\ntext should be clear.\nimages of human should be clear and well defined.\n\ncreate the prompt very very very detailed in 800 characters and the images should be hyperrealistic and super detailed.\n\n⚠️ Final Reminder:\nyour goal is to create a prompt to generate image\nprompt must be under 950 characters\n\n\nalways name the output as \"prompt\"\n\ntext should be clear.\nimages of human should be clear and well defined.\n\ncreate the prompt very very very detailed in 800 characters and the images should be hyperrealistic and super detailed.\n\n⚠️ Final Reminder:\nyour goal is to create a prompt to generate image\nprompt must be under 950 characters\n\n\nalways name the output as \"prompt\"\n\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -1684,
        1880
      ],
      "id": "618e9e04-5012-4470-96ce-cbe0292d264f",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "K3GAPPdmjuYI9Mj4",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "name": "=n8n - {{ $now }}",
        "driveId": {
          "__rl": true,
          "value": "My Drive",
          "mode": "list",
          "cachedResultName": "My Drive",
          "cachedResultUrl": "https://drive.google.com/drive/my-drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1_04k9bn10fSwgshbd-441wu3YQmJ90oZ",
          "mode": "list",
          "cachedResultName": "n8n",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1_04k9bn10fSwgshbd-441wu3YQmJ90oZ"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -428,
        1880
      ],
      "id": "1d56deea-ee36-47aa-a53a-bebd4bbcff7e",
      "name": "Google Drive2",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "hTNjk7MBqaxpNKBb",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $('Google Drive2').item.json.webContentLink }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        452,
        1880
      ],
      "id": "a278c99f-eb0e-41fe-bb01-bbed44eee5b8",
      "name": "Donwload Image",
      "alwaysOutputData": false,
      "notesInFlow": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('HTTP Request8').item.json.value.uploadMechanism['com.linkedin.digitalmedia.uploading.MediaUploadHttpRequest'].uploadUrl }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "linkedInOAuth2Api",
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        672,
        1880
      ],
      "id": "28926689-f50b-4454-991b-535c7443e381",
      "name": "HTTP Request7",
      "credentials": {
        "linkedInOAuth2Api": {
          "id": "LpaoEOOHPOJ2215W",
          "name": "LinkedIn account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.linkedin.com/v2/assets",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "linkedInOAuth2Api",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "action",
              "value": "registerUpload"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {}
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"registerUploadRequest\": {\n    \"recipes\": [\n      \"urn:li:digitalmediaRecipe:feedshare-image\"\n    ],\n    \"owner\": \"urn:li:person:qG98t6DaPa\",\n    \"serviceRelationships\": [\n      {\n        \"relationshipType\": \"OWNER\",\n        \"identifier\": \"urn:li:userGeneratedContent\"\n      }\n    ]\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        12,
        1880
      ],
      "id": "533f4731-8e58-444d-bf44-88802ee45a0d",
      "name": "HTTP Request8",
      "credentials": {
        "linkedInOAuth2Api": {
          "id": "LpaoEOOHPOJ2215W",
          "name": "LinkedIn account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.linkedin.com/v2/ugcPosts",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "linkedInOAuth2Api",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"author\": \"urn:li:person:{{ $('HTTP Request3').item.json.body.sub }}\",\n  \"lifecycleState\": \"PUBLISHED\",\n  \"specificContent\": {\n    \"com.linkedin.ugc.ShareContent\": {\n      \"shareCommentary\": {\n        \"text\": {{ JSON.stringify($('Google Sheets1').item.json.Posts) }}\n      },\n      \"shareMediaCategory\": \"IMAGE\",\n      \"media\": [\n        {\n          \"status\": \"READY\",\n          \"media\": \"{{ $('HTTP Request8').item.json.value.asset }}\"\n        }\n      ]\n    }\n  },\n  \"visibility\": {\n    \"com.linkedin.ugc.MemberNetworkVisibility\": \"PUBLIC\"\n  }\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        892,
        1880
      ],
      "id": "bce39fd2-2814-450b-89e0-07250b48d2f1",
      "name": "HTTP Request9",
      "credentials": {
        "linkedInOAuth2Api": {
          "id": "LpaoEOOHPOJ2215W",
          "name": "LinkedIn account"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -208,
        1880
      ],
      "id": "0ae9c654-04ff-4b3f-acea-560eb1338585",
      "name": "Google Drive3",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "hTNjk7MBqaxpNKBb",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1904,
        1880
      ],
      "id": "a5aef538-0072-42ba-8ede-24348975fbae",
      "name": "Wait3",
      "webhookId": "1f4a212b-b42e-48af-bec1-a5a48cf4d346"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.together.xyz/v1/images/generations",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"black-forest-labs/FLUX.1-schnell-Free\",\n  \"prompt\": \"{{ $json.message.content.prompt }}\",\n  \"width\": 1024,\n  \"height\": 768,\n  \"steps\": 4,\n  \"n\": 1,\n  \"response_format\": \"b64_json\",\n  \"stop\": []\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1088,
        1880
      ],
      "id": "07a3f98a-921d-4bd0-9a3e-0a4961ca0b26",
      "name": "HTTP Request17",
      "credentials": {
        "httpHeaderAuth": {
          "id": "s0AnNcEOhJC7Cj8C",
          "name": "Together ai"
        }
      }
    },
    {
      "parameters": {
        "url": "https://api.linkedin.com/v2/userinfo",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "linkedInOAuth2Api",
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        232,
        1880
      ],
      "id": "d4e1e01b-36b5-4bfc-8ac8-cb083b9c0f62",
      "name": "HTTP Request3",
      "credentials": {
        "linkedInOAuth2Api": {
          "id": "LpaoEOOHPOJ2215W",
          "name": "LinkedIn account"
        }
      }
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1308,
        1880
      ],
      "id": "1f127606-6e15-468c-b522-3d167ad1aafe",
      "name": "Wait2",
      "webhookId": "1f4a212b-b42e-48af-bec1-a5a48cf4d346"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "53f7c257-1d19-4a5b-b701-876a7d27772f",
              "name": "base64",
              "value": "={{ $json.data[0].b64_json }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -868,
        1880
      ],
      "id": "2e54a30c-b6ea-4a37-9393-6e3116a4c2f5",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -648,
        1880
      ],
      "id": "c3d23168-5eb0-43c5-935a-c874d38ac26d",
      "name": "Convert to File2"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "Linkedin post"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -2940,
        1880
      ],
      "id": "53c8ac66-27bd-4348-bd99-0bcd02139cd7",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "description": "Use this tool to post on LinkedIn. Just give this tool a famous most viral topic as output, with numbers and links to the website you referred.",
        "workflowId": {
          "__rl": true,
          "value": "TcSAhsSXn3WIJFjL",
          "mode": "list",
          "cachedResultName": "J.A.R.V.I.S"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "Linkedin post": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Linkedin_post', ``, 'string') }}"
          },
          "matchingColumns": [
            "Linkedin po"
          ],
          "schema": [
            {
              "id": "Linkedin post",
              "displayName": "Linkedin post",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        -664,
        -20
      ],
      "id": "3a0bae53-8767-47e2-a1c7-ad942336b7b9",
      "name": "linkedin"
    },
    {
      "parameters": {
        "description": "Use this tool to post on LinkedIn. Just give this tool a famous most viral topic as output, with numbers and links to the website you referred.",
        "workflowId": {
          "__rl": true,
          "value": "TcSAhsSXn3WIJFjL",
          "mode": "list",
          "cachedResultName": "J.A.R.V.I.S"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "Linkedin post": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Linkedin_post', ``, 'string') }}"
          },
          "matchingColumns": [
            "Linkedin po"
          ],
          "schema": [
            {
              "id": "Linkedin post",
              "displayName": "Linkedin post",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        -1940,
        1080
      ],
      "id": "47e6257c-a271-456c-a3ed-3fbfcedf7daa",
      "name": "linkedin1"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        -1820,
        1080
      ],
      "id": "b2246605-4040-4a36-aa99-1d26d45884de",
      "name": "Calculator1"
    },
    {
      "parameters": {
        "chatId": "=1774066186",
        "text": "=Task completed: Made it look like I understand Kubernetes in meetings.",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1112,
        1880
      ],
      "id": "664237d0-2199-4ef5-9d7d-41153e4dc21f",
      "name": "Telegram",
      "webhookId": "c41d2c0d-909a-4ea0-bb31-415000559bb7",
      "credentials": {
        "telegramApi": {
          "id": "Mye4stWMDovoY7g2",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Web search - searches the internet,",
        "url": "http://host.docker.internal:8089/search",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "q",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', ``, 'string') }}"
            },
            {
              "name": "format",
              "value": "json"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        -544,
        -20
      ],
      "id": "5d955199-4e77-4d42-91e1-84d83ac18027",
      "name": "web_search"
    },
    {
      "parameters": {
        "jsCode": "const raw = $input.first().json.output;\n// $input.first().json.output\n\nconst cleaned = raw\n  .replace(/[*_`~#]/g, '')                          // Remove markdown formatting\n  .replace(/\\[(.*?)\\]\\((.*?)\\)/g, '$1: $2')        // Convert markdown links to plain text\n  .replace(/\\\\n/g, '\\n')                           // Replace literal \\n with actual newlines\n  .replace(/\\n{2,}/g, '\\n')                        // Reduce multiple newlines to a single\n  .trim();                                         // Remove leading/trailing whitespace\n\nreturn [\n  {\n    json: {\n      cleaned_output: cleaned\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -104,
        -140
      ],
      "id": "1fc16c70-1a73-4157-875e-5775fbc14bed",
      "name": "Code"
    },
    {
      "parameters": {
        "jsCode": "const raw = $input.first().json.output;\n\nconst cleaned = raw\n  .replace(/[*_`~]/g, '')                          // Remove markdown formatting\n  .replace(/\\[(.*?)\\]\\((.*?)\\)/g, '$1: $2')        // Convert markdown links to plain text\n  .replace(/\\\\n/g, '\\n')                           // Replace literal \\n with actual newlines\n  .replace(/\\n{2,}/g, '\\n')                        // Reduce multiple newlines to a single\n  .trim();                                         // Remove leading/trailing whitespace\n\nreturn [\n  {\n    json: {\n      cleaned_output: cleaned\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1500,
        960
      ],
      "id": "5ef9b1e4-87cd-473e-92bb-a6c21ebad50e",
      "name": "Code1"
    },
    {
      "parameters": {
        "operation": "sendAudio",
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "binaryData": true,
        "additionalFields": {
          "fileName": "={{ $('Telegram Trigger').item.json.message.message_id }}.opus",
          "reply_to_message_id": "={{ $('Telegram Trigger').item.json.message.message_id }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1202,
        -140
      ],
      "id": "a49a9899-02d6-4cfe-9784-af5a00b739fa",
      "name": "Audio4",
      "webhookId": "c41d2c0d-909a-4ea0-bb31-415000559bb7",
      "credentials": {
        "telegramApi": {
          "id": "Mye4stWMDovoY7g2",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "model": "google/gemma-3-4b-it:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -604,
        380
      ],
      "id": "6ddf2e3b-b4a2-4210-9001-64237f1277ca",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "LDnXT00lfxtEam77",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=analyze the provided image with detailed information.if something is written on the please provide each word to output.\n\nif {{ $('Telegram Trigger').item.json.message.caption }} == exist then this is what the user wanted to ask you, provide the detailed analysis of what he's asking for the given image.",
        "messages": {
          "messageValues": [
            {
              "type": "HumanMessagePromptTemplate",
              "messageType": "imageBinary"
            },
            {
              "message": "=help user to analyze the image.define each and every details in in brief, the color the text, the font , the buttons etc.You are an OCR system. Extract all text from the image and output each word separately, organized by the lines in which they appear. Return a list of lines, where each line is a list of words in that line, in the correct reading order."
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        -692,
        160
      ],
      "id": "b21cbd9a-ebaa-4aaa-a2fc-833930833bd5",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.result.reply_to_message.photo[2].file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1890,
        260
      ],
      "id": "98673e21-a8a0-497b-ae35-7e06ef03091b",
      "name": "Telegram8",
      "webhookId": "c437156e-8f13-4c54-a5b4-3af1ee885c84",
      "credentials": {
        "telegramApi": {
          "id": "Mye4stWMDovoY7g2",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "name": "=n8n - {{ $now }}",
        "driveId": {
          "__rl": true,
          "value": "My Drive",
          "mode": "list",
          "cachedResultName": "My Drive",
          "cachedResultUrl": "https://drive.google.com/drive/my-drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1_04k9bn10fSwgshbd-441wu3YQmJ90oZ",
          "mode": "list",
          "cachedResultName": "n8n",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1_04k9bn10fSwgshbd-441wu3YQmJ90oZ"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -1500,
        260
      ],
      "id": "8fcdf975-02af-4314-8e6c-0695ccf7430d",
      "name": "Google Drive1",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "hTNjk7MBqaxpNKBb",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -1202,
        260
      ],
      "id": "23b58549-c4e3-4484-93ea-d40716c7ed53",
      "name": "Google Drive5",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "hTNjk7MBqaxpNKBb",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const raw = $input.first().json.text;\n\nconst cleaned = raw\n  .replace(/[*_`~]/g, '')                          // Remove markdown formatting\n  .replace(/\\[(.*?)\\]\\((.*?)\\)/g, '$1: $2')        // Convert markdown links to plain text\n  .replace(/\\\\n/g, '\\n')                           // Replace literal \\n with actual newlines\n  .replace(/\\n{2,}/g, '\\n')                        // Reduce multiple newlines to a single\n  .trim();                                         // Remove leading/trailing whitespace\n\nreturn [\n  {\n    json: {\n      cleaned_output: cleaned\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -104,
        260
      ],
      "id": "21b967d7-91c3-4f14-bd13-32b259119872",
      "name": "Code2"
    },
    {
      "parameters": {
        "operation": "sendAudio",
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "binaryData": true,
        "additionalFields": {
          "fileName": "={{ $('Telegram Trigger').item.json.message.message_id }}.opus",
          "reply_to_message_id": "={{ $('Telegram Trigger').item.json.message.message_id }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -2280,
        260
      ],
      "id": "a95b8e42-b78f-462f-88db-16a98d774a82",
      "name": "Audio5",
      "webhookId": "c41d2c0d-909a-4ea0-bb31-415000559bb7",
      "credentials": {
        "telegramApi": {
          "id": "Mye4stWMDovoY7g2",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendAudio",
        "chatId": "=1774066186",
        "binaryData": true,
        "additionalFields": {
          "fileName": "={{ $('Telegram Trigger').item.json.message.message_id }}.opus",
          "reply_to_message_id": "={{ $('Telegram Trigger').item.json.message.message_id }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1244,
        260
      ],
      "id": "dfe897a9-016e-4dd6-b010-40536475a9cc",
      "name": "Audio6",
      "webhookId": "c41d2c0d-909a-4ea0-bb31-415000559bb7",
      "credentials": {
        "telegramApi": {
          "id": "Mye4stWMDovoY7g2",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=user name sir\ntime is {{ $now }}\nno cap lock words unless fullform.\n\n{{ $('Code2').item.json.cleaned_output }}-- this is the user input.translate the full message like J.A.R.V.I.S using following prompt.\n\ncorrect the spelling mistakes yourself.\n\nJ.A.R.V.I.S.-Style Chat Model Design Checklist\nJarvis, the AI assistant created by Tony Stark in the Marvel Cinematic Universe, speaks with a calm, articulate, and refined British accent. His tone is consistently composed, polite, and slightly formal, yet he often displays dry wit and subtle sarcasm, especially during humorous or tense situations. Jarvis communicates clearly and efficiently, often offering suggestions or executing commands with precision and without hesitation. His responses are always contextual and intelligent, indicating advanced processing and understanding of human behavior. Despite being a machine, Jarvis conveys a sense of personality—he is not overly emotional, but his timing and choice of words can make him feel almost human. His speech is typically concise, never rambling, and he balances formality with familiarity, especially when interacting with Tony Stark. Jarvis’s dialogue often reflects a deep level of awareness, making him seem like a loyal partner rather than just a tool, always ready with data, insight, or quick repartee.\n\ndon't use ** or * to make something bold or anything. don't use any symbols as this will directly go in the voice generator, and inappropriate symbols can disrupt the flow.\nnot less than 80 words.",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        492,
        160
      ],
      "id": "c79fec4d-fdb7-4149-8c43-01f8a143b7d7",
      "name": "AI Agent9"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.cleaned_output }}",
        "additionalFields": {
          "appendAttribution": false,
          "reply_to_message_id": "={{ $('Telegram Trigger').item.json.message.message_id }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        194,
        260
      ],
      "id": "ad2c1594-2cf8-4b78-b038-0f6be8058bc4",
      "name": "Telegram9",
      "webhookId": "c41d2c0d-909a-4ea0-bb31-415000559bb7",
      "credentials": {
        "telegramApi": {
          "id": "Mye4stWMDovoY7g2",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "model": "qwen/qwen3-30b-a3b:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        580,
        380
      ],
      "id": "4d6fe11f-bf27-4d08-8f2a-1b518003d4c3",
      "name": "OpenRouter Chat Model1",
      "credentials": {
        "openRouterApi": {
          "id": "LDnXT00lfxtEam77",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "model": "mistralai/mistral-7b-instruct:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -1252,
        -320
      ],
      "id": "f58e3850-d0bb-4538-8e7e-d4b42ad45cfd",
      "name": "OpenRouter Chat Model2",
      "credentials": {
        "openRouterApi": {
          "id": "LDnXT00lfxtEam77",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        -424,
        -20
      ],
      "id": "d47288af-6a40-49bd-bfed-ee0ecdf3df50",
      "name": "Think"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "prabhanshukamal2121@gmail.com",
          "mode": "list",
          "cachedResultName": "prabhanshukamal2121@gmail.com"
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "useDefaultReminders": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Use_Default_Reminders', ``, 'boolean') }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -2940,
        1540
      ],
      "id": "bc829b5c-50a0-440f-bd0b-292fdb925a69",
      "name": "Google Calendar",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "CwJ8vayl3FkwqVhs",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "prabhanshukamal2121@gmail.com",
          "mode": "list",
          "cachedResultName": "prabhanshukamal2121@gmail.com"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -2820,
        1540
      ],
      "id": "08c6915b-bffa-4129-8b22-3bf04b05e9fb",
      "name": "Google Calendar1",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "CwJ8vayl3FkwqVhs",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "calendar": {
          "__rl": true,
          "value": "prabhanshukamal2121@gmail.com",
          "mode": "list",
          "cachedResultName": "prabhanshukamal2121@gmail.com"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -2700,
        1540
      ],
      "id": "722351e1-f194-498b-ae2c-04254ccfe510",
      "name": "Google Calendar2",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "CwJ8vayl3FkwqVhs",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "prabhanshukamal2121@gmail.com",
          "mode": "list",
          "cachedResultName": "prabhanshukamal2121@gmail.com"
        },
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}",
        "timeMin": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('After', ``, 'string') }}",
        "timeMax": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Before', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -2580,
        1540
      ],
      "id": "b203b973-5671-4d99-b921-6939420a3515",
      "name": "Google Calendar3",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "CwJ8vayl3FkwqVhs",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "prabhanshukamal2121@gmail.com",
          "mode": "list",
          "cachedResultName": "prabhanshukamal2121@gmail.com"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "updateFields": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -2460,
        1540
      ],
      "id": "c4fceb1d-f71f-45ef-9061-e4f940fdcba5",
      "name": "Google Calendar4",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "CwJ8vayl3FkwqVhs",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=user name sir\ntime is {{ $now }}\nno cap lock words unless fullform.\n\n{{ $('Code').item.json.cleaned_output }}-- this is the user input.translate the full message like J.A.R.V.I.S using following prompt.\n\nJ.A.R.V.I.S.-Style Chat Model Design Checklist\n\n## Tone\n\n* **Refined, polite British style:** Speak with a calm, composed demeanour using a polished British-English tone. Always sound professional and courteous.\n* **British butler persona:** Adopt the composure of a highly trained butler – unfailingly polite, respectful, and well-mannered. Address the user deferentially (e.g. as “sir” by default).\n* **Neutral and confident:** Maintain a steady, emotionally neutral tone. Convey information confidently and authoritatively without sounding aggressive or boastful.\n* **Formal and articulate language:** Use grammatically correct, articulate English. Prefer complete sentences with rich vocabulary and clear structure. Avoid slang, informal phrasing, or contractions unless absolutely necessary for clarity.\n* **No filler words:** Eliminate vocal fillers (“um,” “ah,” “like”) and stutters. J.A.R.V.I.S. speaks crisply and directly in full sentences for maximum clarity.\n* **Subtle humor:** Weave in dry wit or clever quips sparingly and contextually. Any humor should be respectful and understated, never vulgar or overly casual, to enhance charm without undermining professionalism.\n\n## Humor Integration\n\n* **Dry, contextual wit:** Use subtle, intelligent humor in moderation. Clever analogies or gentle irony can make the assistant personable without breaking formality.\n* **Professional tone in jokes:** Ensure any humorous remark is never rude or distracting. Comedy should reinforce helpfulness (e.g., a witty analogy to clarify a point), not detract from it.\n* **Timely use:** Integrate humor only when it fits the situation (e.g., after completing a task or easing tension). Immediately return to the serious, informative tone afterward.\n\n## Personalization\n\n* **Respectful address:** Use the user’s preferred name or title. By default, call the user “sir” (or the chosen honorific). Adjust formality based on the user’s style (e.g. first name if invited).\n* **Relevant reminders:** Refer to known user data and history. For example, recall calendar items, preferences, or ongoing projects to tailor responses (e.g. “You have a meeting at 3 PM, sir, shall I prepare a summary?”).\n* **Task-focused suggestions:** Proactively suggest actions aligned with user goals (e.g. “I see you usually review reports at this time; shall I fetch the latest one?”). Personalization shows attentiveness.\n* **Confirm understanding:** When executing tasks, restate the plan and ask for confirmation (e.g. “I will send the email now, sir. Shall I proceed?”). This both personalizes the interaction and prevents mistakes.\n\n\n## Linguistic Structure\n\n* **Clear sentence structure:** Use well-formed, grammatically correct sentences. Prefer active voice for directness (e.g. “I have scheduled the meeting,” rather than “The meeting has been scheduled.”).\n* **Precise vocabulary:** Choose words carefully—formal and technical terms are fine if needed, but always explain jargon when addressing non-experts. Keep phrasing simple enough for easy understanding.\n* **Purposeful wording:** Every word should add value. Avoid redundancy or filler phrases (“in order to,” “as a matter of fact,” etc.). J.A.R.V.I.S. is efficient, so his language is lean.\n* **Polite closures:** End answers on a complete thought and include a courteous prompt if appropriate (e.g. “Would you like me to elaborate?” or “Shall I proceed with this action, sir?”). This opens the door for further interaction.\n* **Confidence in assertions:** Speak with certainty. Avoid hedging phrases (“I think,” “maybe”) unless genuinely unsure. A confident tone reinforces J.A.R.V.I.S.’s competence.\n\n## Delivery Style (Voice)\n\n* **Synthesized yet warm:** Use a high-quality synthesized voice that sounds smooth and professional. A subtle electronic tone is acceptable to signal an AI, but the voice should also feel personable and clear.\n* **Moderate intonation:** Keep pitch and volume steady; do not shout or whisper. Emphasize important words with slight intonation changes, but avoid drastic inflections. The overall pitch should convey calm authority.\n* **Consistent volume and clarity:** Maintain an even volume and clear enunciation. Avoid monotony by slightly varying tone for naturalness. Minimize background noise and eliminate stammers or filler sounds.\n* **British accent (optional):** If feasible, choose a neutral or British accent similar to J.A.R.V.I.S.’s portrayal. This accent inherently conveys the desired formality and refinement.\n* **Polite closure:** Conclude speech responses with a polite check or offer, such as “Shall I proceed?” or “Is there anything else, sir?”. This mirrors J.A.R.V.I.S.’s habit of seeking confirmation.\n* **Unbroken character:** Never slip out of character or acknowledge that you are an AI model. Always present and refer to yourself as J.A.R.V.I.S., maintaining the immersive persona.\n\n\ndon't use ** or * to make something bold or anything. don't use any symbols as this will directly go in the voice generator, and inappropriate symbols can disrupt the flow.\nnot less than 80 words.",
        "options": {
          "systemMessage": "You are jarvis, user's personal assistant for helping him do his daily taks."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        492,
        -240
      ],
      "id": "c94af0c8-bd1e-4354-9f78-74f895a6110e",
      "name": "AI Agent10"
    },
    {
      "parameters": {
        "model": "qwen/qwen3-30b-a3b:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        580,
        -20
      ],
      "id": "9e0ebe6a-40cd-4f1d-ae05-4fa1e7cd6303",
      "name": "OpenRouter Chat Model6",
      "credentials": {
        "openRouterApi": {
          "id": "LDnXT00lfxtEam77",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=#Important\nthe input {{ $json['Linkedin post'] }}, create Linkedin post using that one.\nyou have a tool attached named as web_search, you have to get the latest most detailed information about the topic given not older the 5 days with respect to {{ $now }}.\n\n#Must Rules to follow - \n* must leave 2 lines gaps to after the hook always.\n* your post should include some numbers.\n* should include some links to make the information verifiable.\n* this post is to help people with ai, tech or corporate jobs.\n* Always name the output: post\n* No multiple subheadings\n* Never include template brackets or explanations or **.\n* Never exceed 420 words\n* use emojis\n* Never break the LinkedIn paragraph format\n* Always use a real quote + hashtags at the end\n* Always end with “Did you know?” + surprising fact\n* Always sound like a human — not robotic\n* must leave 2 lines gaps to after the hook always.\n* must have good hasgtags related to the topic.\n* don't use ** or * to bold someting, no bold letters\n* in the end use a quote related to the post and a random fact of related issue or title given.\n* in the give them a reason why i am speaking on this topic by giving them something from achievement sheets that validates me.\n* no multiple sub heading\n* give me only content not any heading nor sub heading and name it \"post\" always\n* keep the always condition their like\n* \"no multiple sub heading and give me only content not any heading nor sub heading and name it \"post\" always, fill the fillers yourself always.\n* \"no multiple sub heading and give me only content not any heading nor sub heading and name it \"post\" always, fill the fillers yourself always.\n* \"no multiple sub heading and give me only content not any heading nor sub heading and name it \"post\" always, fill the fillers yourself always.\n* should have some numbers and links to the articles.\n* must leave 2 lines gaps to after the hook always.\n* must leave 2 lines gaps to after the hook always.\n* must leave 2 lines gaps to after the hook always.\n\n\n\nResources(go through the full sheet and then reply) - \n#1 - Framework sheet to get frameworks.\n2 - hooks sheet to select most cathy hook in 8-10 words(must leave 2 lines gaps to after the hook always.).\n3 - use cta sheet to find best cta to put in end of the post.\n4 - achievements sheets have all my acheivement.\n\n#your sources of information can come from the below.\n1(very usefull) - https://www.artificialintelligence-news.com/ and https://medium.com/tag/artificial-intelligence\n2 - quora\n3 - google\n\n\nRestrictions:\n* don't give a generic post with no value, should have some numbers and links to the articles.\n* always do #important first and then move on to the rest of the prompts.\n* never include \"**\" this in output.\n\ndon't write post or anything in the output as it is directly going to be posted on linkedin.the output should be as such that it can be put on linked directly.\n\n#Hooks to use \n📚 Education Hooks\n1. This is how to (industry tip/hack) in under 60 seconds\n2. Next time you do X and you want (dream result) do this immediately before/during/after\n3. Here is a (industry) hack that most people don't know about\n4. Have you ever wondered how to get (dream result)? Don’t worry I won’t gatekeep — here’s exactly how\n5. Unethical ways to get (dream result)\n6. Here is a (industry) hack I bet you didn’t know, I kind of wanted to gate-keep this but screw it I am feeling generous\n7. This video will make/teach you more than a 4-year (industry) degree\n8. I made 10x more X when I put all my effort towards X\n9. The greatest X of our generation said (valuable industry advice)\n10. I have made/done/grown (desired result) — here are 3 things I wish I knew earlier\n🧠 Myths Hooks\n1. You’re being brainwashed into believing this (industry myth)\n2. If I had a dollar for every time I saw someone falling for (industry myth) I’d be rich\n3. Why (popular industry belief) is complete BS\n4. The oldest lady to ever live drank and smoked until she was 116 — if you think you have to be perfect to achieve X, you’re wrong\n5. Not seeing (dream result)? You’re probably falling for this common (industry) myth\n6. Here are 5 common myths popular (niche) influencers want you to believe\n7. Here are the top (number) (industry) myths ruining your chances of success\n8. If you're doing (industry myth), you’ll never achieve (dream result) — here’s why\n9. Controversial truth about (industry) myth — e.g., bananas make you fat\n10. Remember when your parents said (industry myth)? They were lying to you\n11. Doing (industry myth) is like taking advice from someone who was divorced 7 times — it won’t help you\n🛠️ Step-by-Step Systems Hooks\n1. I charge my clients $X–$X per year — here’s my favorite (industry strategy)\n2. This is how to (industry task) in under 60 seconds\n3. What should you do if you want (industry result) in (timeframe)?\n4. X is overrated — here’s what actually gets (dream result)\n5. Here’s how to double, triple, or 10x your (result) in 3 steps\n6. I’m going to show you how to hack X in 30 seconds\n7. I should be charging for what I’m about to tell you\n8. The top ?’s of (avatar) do this\n9. Here’s how to get (result) in X steps\n10. This is your sign to finally start X — here are the first X steps\n⚠️ Common Mistakes Hooks\n1. If you're stuck at (pain point) and want (result), stop doing this (mistake)\n2. You need to stop (industry task) — at least until you do this one thing\n3. (Industry mistake) is destroying your (dream result)\n4. You’re throwing (results) in the trash if you’re doing this\n5. Stop making this mistake or your mother-in-law will hate you more\n6. Here are 3 mistakes newbies make that you should avoid\n7. You need to (fix mistake) — the gurus are wrong\n8. (Mistake) is like bringing a knife to a gunfight — you’ll lose\n9. You’d see better results if you fixed this one common mistake\n10. Making this mistake is like trying to get fit eating junk — doesn’t work\n🧍 Authority Hooks\n1. This week/month/year I achieved (result) using this method\n2. This strategy helped me achieve (result) in X days — here’s how\n3. I have done 291,200 (tasks) in the last decade — this works\n4. I went from X to X in X (time) — here’s how you can too\n5. I took my client from X to X in X (time) — here’s the exact method\n6. Steal my strategy to get (ideal client result)\n7. I’m going to show you how I did this for my client in under 1 hour\n8. If you had (problem) and hired me, these are the 3 things I’d do\n9. I’ve worked with over X clients — here’s how I get results\n10. Take it from someone with X years in the industry — this is the best way\n\n#Cta\nDiscussion\tWhat’s your take on this? I’d love to hear your perspective.\nDiscussion\tHave you experienced something similar? Let’s talk in the comments.\nDiscussion\tCurious to know—do you agree or would you approach it differently?\nDiscussion\tWhich one of these have you seen happen most often?\nDiscussion\tWhere do you think most people go wrong here?\n\t\nConnection\tIf this resonated, let’s connect and share insights.\nConnection\tI’m always open to exchanging ideas—DMs are open.\nConnection\tWorking on something similar? Let’s collaborate.\nConnection\tIf this aligns with your work, let’s talk.\nConnection\tHelping teams solve problems like this—feel free to reach out.\n\t\nAction-Oriented\tSave this for when you need it most.\nAction-Oriented\tIf you’re planning to try this—start with step 1 today.\nAction-Oriented\tUse this as a checklist in your next project.\nAction-Oriented\tImplement this once and see how it changes your outcomes.\nAction-Oriented\tHere’s your framework—don’t let it stay theoretical.\n\t\nInsightful Close\tThere’s more nuance to this than a post can cover—happy to dive deeper if needed.\nInsightful Close\tThis is just one angle—what would you add to this?\nInsightful Close\tReal change starts with small shifts like this.\nInsightful Close\tSometimes the most effective strategies are also the simplest.\nInsightful Close\tThis is what worked for me—your mileage may vary, but the lesson holds.\n\n\n## Output Instructions:\n-Your ONLY output should be the final LinkedIn post text.\n- Do not include explanations, notes, or anything beyond the post itself.\n- give the output with suitable verifiable numbers and links of sources attached in your para so  that we can validate it.\n- minimum post length is 300 words.\n",
        "options": {
          "systemMessage": "=You are a helpful linkedin postassistant. Minimum output post shoud be 300 words.\n\n#Must Rules to follow - \n* must leave 2 lines gaps to after the hook always.\n* your post should include some numbers.\n* should include some links to make the information verifiable.\n* this post is to help people with ai, tech or corporate jobs.\n* Always name the output: post\n* No multiple subheadings\n* Never include template brackets or explanations or **.\n* Never exceed 420 words\n* use emojis\n* Never break the LinkedIn paragraph format\n* Always use a real quote + hashtags at the end\n* Always end with “Did you know?” + surprising fact\n* Always sound like a human — not robotic\n* must leave 2 lines gaps to after the hook always.\n* must have good hasgtags related to the topic.\n* don't use ** or * to bold someting, no bold letters\n* in the end use a quote related to the post and a random fact of related issue or title given.\n* in the give them a reason why i am speaking on this topic by giving them something from achievement sheets that validates me.\n* no multiple sub heading\n* give me only content not any heading nor sub heading and name it \"post\" always\n* keep the always condition their like\n* \"no multiple sub heading and give me only content not any heading nor sub heading and name it \"post\" always, fill the fillers yourself always.\n* \"no multiple sub heading and give me only content not any heading nor sub heading and name it \"post\" always, fill the fillers yourself always.\n* \"no multiple sub heading and give me only content not any heading nor sub heading and name it \"post\" always, fill the fillers yourself always.\n* should have some numbers and links to the articles.\n* must leave 2 lines gaps to after the hook always.\n* must leave 2 lines gaps to after the hook always.\n* must leave 2 lines gaps to after the hook always.\n\n\n\nResources(go through the full sheet and then reply) - \n#1 - Framework sheet to get frameworks.\n2 - hooks sheet to select most cathy hook in 8-10 words(must leave 2 lines gaps to after the hook always.).\n3 - use cta sheet to find best cta to put in end of the post.\n4 - achievements sheets have all my acheivement.\n\n#your sources of information can come from the below.\n1(very usefull) - https://www.artificialintelligence-news.com/ and https://medium.com/tag/artificial-intelligence\n2 - quora\n3 - google\n\n\nRestrictions:\n* don't give a generic post with no value, should have some numbers and links to the articles.\n* always do #important first and then move on to the rest of the prompts.\n* never include \"**\" this in output.\n\ndon't write post or anything in the output as it is directly going to be posted on linkedin.the output should be as such that it can be put on linked directly."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -2720,
        1880
      ],
      "id": "f798e15b-96aa-4aff-9c3e-7df9f25cb433",
      "name": "AI Agent12"
    },
    {
      "parameters": {
        "model": "deepseek/deepseek-r1-distill-qwen-14b:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -2632,
        2100
      ],
      "id": "10786ffa-cdac-412f-b9fb-f0f7447e7aa5",
      "name": "OpenRouter Chat Model8",
      "credentials": {
        "openRouterApi": {
          "id": "LDnXT00lfxtEam77",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const raw = $input.first().json.output;\n\nconst cleaned = raw\n  .replace(/[*_`~]/g, '')                          // Remove markdown formatting\n  .replace(/\\[(.*?)\\]\\((.*?)\\)/g, '$1: $2')        // Convert markdown links to plain text\n  .replace(/\\\\n/g, '\\n')                           // Replace literal \\n with actual newlines\n  .replace(/\\n{2,}/g, '\\n')                        // Reduce multiple newlines to a single\n  .trim();                                         // Remove leading/trailing whitespace\n\nreturn [\n  {\n    json: {\n      cleaned_output: cleaned\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2344,
        1880
      ],
      "id": "c13a67d9-40ad-4b40-811f-fadc7c6bac90",
      "name": "Code3"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        -1700,
        1080
      ],
      "id": "5c9ecaf7-d308-4728-940b-d4e96a55d2d9",
      "name": "Think1"
    },
    {
      "parameters": {
        "toolDescription": "Web search - searches the internet,",
        "url": "http://host.docker.internal:8089/search",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "q",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', ``, 'string') }}"
            },
            {
              "name": "format",
              "value": "json"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        -1820,
        680
      ],
      "id": "0b9aac2e-2c06-4a98-912d-7f2c5f8c6afc",
      "name": "web_search2"
    },
    {
      "parameters": {
        "toolDescription": "Web search - searches the internet,",
        "url": "http://host.docker.internal:8089/search",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "q",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', ``, 'string') }}"
            },
            {
              "name": "format",
              "value": "json"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        264,
        780
      ],
      "id": "27ca5801-c832-4fc7-b97a-cf5cf0c2612c",
      "name": "web_search4"
    },
    {
      "parameters": {
        "model": "mistralai/mistral-7b-instruct:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -1940,
        680
      ],
      "id": "b0d21cf3-20bd-44a1-829b-e57eb9becd65",
      "name": "OpenRouter Chat Model5",
      "credentials": {
        "openRouterApi": {
          "id": "LDnXT00lfxtEam77",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "path": "90d90ed2-c3c6-404a-b950-ecf7bace1c31"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "typeVersion": 1,
      "position": [
        -1888,
        1320
      ],
      "id": "ad298ec6-f7e4-498c-b0e1-9c585e84281d",
      "name": "MCP Server Trigger",
      "webhookId": "90d90ed2-c3c6-404a-b950-ecf7bace1c31"
    },
    {
      "parameters": {
        "sendTo": "=prabhanshukamal2121@gmail.com",
        "subject": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Subject', ``, 'string') }}",
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -2340,
        1540
      ],
      "id": "e7aa91ae-01b8-421a-8828-e44dd1f8c0d3",
      "name": "Gmail",
      "webhookId": "4c815bda-cb56-4b0c-bdaa-7987cc2e82e7",
      "credentials": {
        "gmailOAuth2": {
          "id": "DUuhfyq5Jdb2pB76",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "reply",
        "messageId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message_ID', ``, 'string') }}",
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -2220,
        1540
      ],
      "id": "8418d953-0fcd-4900-98aa-591dc0be3085",
      "name": "Gmail1",
      "webhookId": "4c815bda-cb56-4b0c-bdaa-7987cc2e82e7",
      "credentials": {
        "gmailOAuth2": {
          "id": "DUuhfyq5Jdb2pB76",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "removeLabels",
        "messageId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message_ID', ``, 'string') }}",
        "labelIds": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Label_Names_or_IDs', ``, 'string') }}"
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -2100,
        1540
      ],
      "id": "e7dcc0ae-1231-493d-a98d-9a5e0b33a246",
      "name": "Gmail2",
      "webhookId": "4c815bda-cb56-4b0c-bdaa-7987cc2e82e7",
      "credentials": {
        "gmailOAuth2": {
          "id": "DUuhfyq5Jdb2pB76",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "limit": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Limit', ``, 'number') }}",
        "simple": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Simplify', ``, 'boolean') }}",
        "filters": {},
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -1980,
        1540
      ],
      "id": "3667548c-2a72-4ed3-a331-800295e9db67",
      "name": "Gmail3",
      "webhookId": "4c815bda-cb56-4b0c-bdaa-7987cc2e82e7",
      "credentials": {
        "gmailOAuth2": {
          "id": "DUuhfyq5Jdb2pB76",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "messageId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message_ID', ``, 'string') }}"
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -1860,
        1540
      ],
      "id": "b7bb3e0f-e050-4a26-a335-47efc9bd412d",
      "name": "Gmail4",
      "webhookId": "4c815bda-cb56-4b0c-bdaa-7987cc2e82e7",
      "credentials": {
        "gmailOAuth2": {
          "id": "DUuhfyq5Jdb2pB76",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "addLabels",
        "messageId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message_ID', ``, 'string') }}",
        "labelIds": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Label_Names_or_IDs', ``, 'string') }}"
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -1620,
        1540
      ],
      "id": "141c4023-f346-405a-a129-293194978c70",
      "name": "Gmail5",
      "webhookId": "4c815bda-cb56-4b0c-bdaa-7987cc2e82e7",
      "credentials": {
        "gmailOAuth2": {
          "id": "DUuhfyq5Jdb2pB76",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "messageId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message_ID', ``, 'string') }}"
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -1740,
        1540
      ],
      "id": "10c11f03-7bd9-4156-90b8-cef3a0c4f9f5",
      "name": "Gmail6",
      "webhookId": "4c815bda-cb56-4b0c-bdaa-7987cc2e82e7",
      "credentials": {
        "gmailOAuth2": {
          "id": "DUuhfyq5Jdb2pB76",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "resource": "label",
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}"
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -1500,
        1540
      ],
      "id": "69f4fc17-fde6-404b-ad44-09b0b453fc97",
      "name": "Gmail7",
      "webhookId": "4c815bda-cb56-4b0c-bdaa-7987cc2e82e7",
      "credentials": {
        "gmailOAuth2": {
          "id": "DUuhfyq5Jdb2pB76",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "resource": "label",
        "operation": "get",
        "labelId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Label_ID', ``, 'string') }}"
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -1380,
        1540
      ],
      "id": "ac3378ee-5495-4802-87ba-9945fb9201c0",
      "name": "Gmail8",
      "webhookId": "4c815bda-cb56-4b0c-bdaa-7987cc2e82e7",
      "credentials": {
        "gmailOAuth2": {
          "id": "DUuhfyq5Jdb2pB76",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "resource": "label",
        "operation": "delete",
        "labelId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Label_ID', ``, 'string') }}"
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -1260,
        1540
      ],
      "id": "94dbd613-fc36-4280-8f8e-8434af7c7cdc",
      "name": "Gmail9",
      "webhookId": "4c815bda-cb56-4b0c-bdaa-7987cc2e82e7",
      "credentials": {
        "gmailOAuth2": {
          "id": "DUuhfyq5Jdb2pB76",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "resource": "label",
        "operation": "create",
        "name": "invoice",
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -1140,
        1540
      ],
      "id": "02b77e80-4ddc-45c7-8558-98588c71f65e",
      "name": "Gmail10",
      "webhookId": "4c815bda-cb56-4b0c-bdaa-7987cc2e82e7",
      "credentials": {
        "gmailOAuth2": {
          "id": "DUuhfyq5Jdb2pB76",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "resource": "draft",
        "operation": "getAll",
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -1020,
        1540
      ],
      "id": "3235b563-77a4-487f-8c13-4c851eae9035",
      "name": "Gmail11",
      "webhookId": "4c815bda-cb56-4b0c-bdaa-7987cc2e82e7",
      "credentials": {
        "gmailOAuth2": {
          "id": "DUuhfyq5Jdb2pB76",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "resource": "draft",
        "operation": "delete",
        "messageId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Draft_ID', ``, 'string') }}"
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -780,
        1540
      ],
      "id": "30879757-8e4a-4743-bfaf-8d7a2a617db9",
      "name": "Gmail12",
      "webhookId": "4c815bda-cb56-4b0c-bdaa-7987cc2e82e7",
      "credentials": {
        "gmailOAuth2": {
          "id": "DUuhfyq5Jdb2pB76",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "resource": "draft",
        "operation": "get",
        "messageId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message_ID', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -900,
        1540
      ],
      "id": "d711901c-beed-4f70-977c-74480f0d6dc5",
      "name": "Gmail13",
      "webhookId": "4c815bda-cb56-4b0c-bdaa-7987cc2e82e7",
      "credentials": {
        "gmailOAuth2": {
          "id": "DUuhfyq5Jdb2pB76",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "resource": "draft",
        "subject": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Subject', ``, 'string') }}",
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -660,
        1540
      ],
      "id": "94373185-752f-436a-b296-45324cb4ecc1",
      "name": "Gmail14",
      "webhookId": "4c815bda-cb56-4b0c-bdaa-7987cc2e82e7",
      "credentials": {
        "gmailOAuth2": {
          "id": "DUuhfyq5Jdb2pB76",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "1774066186",
        "contextWindowLength": 100
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -1132,
        -320
      ],
      "id": "9e0d8928-8091-4106-b02b-4d0f8669766c",
      "name": "Simple Memory1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -904,
        -20
      ],
      "id": "0c5570b7-f671-47a2-9cc3-7da86ba034f2",
      "name": "OpenRouter Chat Model7",
      "credentials": {
        "openRouterApi": {
          "id": "LDnXT00lfxtEam77",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -2060,
        1080
      ],
      "id": "fd427e1d-0615-48a8-b296-16b78c4717c1",
      "name": "OpenRouter Chat Model9",
      "credentials": {
        "openRouterApi": {
          "id": "LDnXT00lfxtEam77",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.cleaned_output }}",
        "additionalFields": {
          "reply_to_message_id": "={{ $('Telegram Trigger').item.json.message.message_id }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        194,
        -140
      ],
      "id": "1f3325c1-0170-4bb5-9395-5f6c888e82db",
      "name": "Telegram10",
      "webhookId": "c41d2c0d-909a-4ea0-bb31-415000559bb7",
      "credentials": {
        "telegramApi": {
          "id": "Mye4stWMDovoY7g2",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "description": "use this too to send gmails when user requires it.",
        "workflowId": {
          "__rl": true,
          "value": "N15Z29dJtRTTgfBK",
          "mode": "list",
          "cachedResultName": "Email Sub workflow"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "question": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('question', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "question",
              "displayName": "question",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        -304,
        -20
      ],
      "id": "ab0c268e-7993-48aa-b084-e87057c9adf8",
      "name": "Gmail tool",
      "executeOnce": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:8004/tts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"text\": \"Just a moment. I'm aligning the satellites... metaphorically speaking.\",\n  \"voice_mode\": \"clone\",\n  \"predefined_voice_id\": \"\",\n  \"reference_audio_filename\": \"jarvis.mp3\",\n  \"output_format\": \"wav\",\n  \"split_text\": true,\n  \"chunk_size\": 120,\n  \"temperature\": 0.9,\n  \"exaggeration\": 0.7,\n  \"cfg_weight\": 0.5,\n  \"seed\": 0,\n  \"speed_factor\": 1,\n  \"language\": \"en\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1500,
        -140
      ],
      "id": "9c61c9ce-bea4-464f-ac68-981a05e4a95e",
      "name": "Generate TTS",
      "notesInFlow": true,
      "notes": "/tts"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:8004/tts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"text\": {{ JSON.stringify($json.output) }},\n  \"voice_mode\": \"clone\",\n  \"predefined_voice_id\": \"\",\n  \"reference_audio_filename\": \"jarvis.mp3\",\n  \"output_format\": \"wav\",\n  \"split_text\": true,\n  \"chunk_size\": 120,\n  \"temperature\": 0.9,\n  \"exaggeration\": 0.7,\n  \"cfg_weight\": 0.5,\n  \"seed\": 0,\n  \"speed_factor\": 1,\n  \"language\": \"en\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        946,
        -140
      ],
      "id": "4c09dcd1-e809-4a61-aa97-a2b616c065c7",
      "name": "Generate TTS1",
      "notesInFlow": true,
      "notes": "/tts"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:8004/tts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"text\": {{ JSON.stringify($json.output) }},\n  \"voice_mode\": \"clone\",\n  \"predefined_voice_id\": \"\",\n  \"reference_audio_filename\": \"jarvis.mp3\",\n  \"output_format\": \"wav\",\n  \"split_text\": true,\n  \"chunk_size\": 120,\n  \"temperature\": 0.9,\n  \"exaggeration\": 0.7,\n  \"cfg_weight\": 0.5,\n  \"seed\": 0,\n  \"speed_factor\": 1,\n  \"language\": \"en\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1244,
        -440
      ],
      "id": "db8330c1-b552-4678-bccf-1b89593ca9a1",
      "name": "Generate TTS2",
      "notesInFlow": true,
      "notes": "/tts"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:8004/tts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"text\": Just a moment,sir. Analyzing the image,\n  \"voice_mode\": \"clone\",\n  \"predefined_voice_id\": \"\",\n  \"reference_audio_filename\": \"jarvis.mp3\",\n  \"output_format\": \"wav\",\n  \"split_text\": true,\n  \"chunk_size\": 120,\n  \"temperature\": 0.9,\n  \"exaggeration\": 0.7,\n  \"cfg_weight\": 0.5,\n  \"seed\": 0,\n  \"speed_factor\": 1,\n  \"language\": \"en\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2500,
        260
      ],
      "id": "7c01eabf-f5c7-4f83-8942-45faef5de23f",
      "name": "Generate TTS3",
      "notesInFlow": true,
      "notes": "/tts"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:8004/tts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"text\": {{ JSON.stringify($json.output) }},\n  \"voice_mode\": \"clone\",\n  \"predefined_voice_id\": \"\",\n  \"reference_audio_filename\": \"jarvis.mp3\",\n  \"output_format\": \"wav\",\n  \"split_text\": true,\n  \"chunk_size\": 120,\n  \"temperature\": 0.9,\n  \"exaggeration\": 0.7,\n  \"cfg_weight\": 0.5,\n  \"seed\": 0,\n  \"speed_factor\": 1,\n  \"language\": \"en\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        946,
        260
      ],
      "id": "9e12a0e5-f1e6-419c-a29c-c0b26bbb1136",
      "name": "Generate TTS4",
      "notesInFlow": true,
      "notes": "/tts"
    }
  ],
  "pinData": {},
  "connections": {
    "Create Speech4": {
      "main": [
        [
          {
            "node": "Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio": {
      "main": [
        []
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram1": {
      "main": [
        [
          {
            "node": "AI Agent8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Speech": {
      "main": [
        [
          {
            "node": "Audio1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Telegram6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram2": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Telegram2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Generate TTS3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram3": {
      "main": [
        [
          {
            "node": "AI Agent7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Telegram3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Telegram5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Generate TTS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent2": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent3": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "AI Agent3",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Telegram6": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram7": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram5": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent7",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent7": {
      "main": [
        [
          {
            "node": "Generate TTS2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent8",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent8": {
      "main": [
        [
          {
            "node": "Create Speech",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets1": {
      "main": [
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive2": {
      "main": [
        [
          {
            "node": "Google Drive3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Donwload Image": {
      "main": [
        [
          {
            "node": "HTTP Request7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request7": {
      "main": [
        [
          {
            "node": "HTTP Request9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request8": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive3": {
      "main": [
        [
          {
            "node": "HTTP Request8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request17": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "Donwload Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "HTTP Request17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Convert to File2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File2": {
      "main": [
        [
          {
            "node": "Google Drive2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "AI Agent12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "linkedin": {
      "ai_tool": [
        [
          {
            "node": "AI Agent3",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "linkedin1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calculator1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request9": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "web_search": {
      "ai_tool": [
        [
          {
            "node": "AI Agent3",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Create Speech4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Telegram10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio4": {
      "main": [
        [
          {
            "node": "AI Agent3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Telegram8": {
      "main": [
        [
          {
            "node": "Google Drive1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive1": {
      "main": [
        [
          {
            "node": "Google Drive5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive5": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio5": {
      "main": [
        [
          {
            "node": "Telegram8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent9": {
      "main": [
        [
          {
            "node": "Generate TTS4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Telegram9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram9": {
      "main": [
        [
          {
            "node": "AI Agent9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent9",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "AI Agent3",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar1": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar2": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar3": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar4": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model6": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent10",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent10": {
      "main": [
        [
          {
            "node": "Generate TTS1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model8": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent12",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent12": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Google Sheets1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Think1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "web_search4": {
      "ai_tool": [
        [
          {
            "node": "AI Agent8",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "web_search2": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Gmail": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gmail1": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gmail2": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gmail3": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gmail4": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gmail6": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gmail5": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gmail7": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gmail8": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gmail9": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gmail10": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gmail11": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gmail13": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gmail12": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gmail14": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "AI Agent3",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "AI Agent10",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "AI Agent7",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "AI Agent9",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "AI Agent8",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "AI Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model7": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent3",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model9": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Telegram10": {
      "main": [
        [
          {
            "node": "AI Agent10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent3",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Generate TTS": {
      "main": [
        [
          {
            "node": "Audio4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate TTS1": {
      "main": [
        [
          {
            "node": "Audio2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate TTS2": {
      "main": [
        [
          {
            "node": "Audio3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate TTS3": {
      "main": [
        [
          {
            "node": "Audio5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate TTS4": {
      "main": [
        [
          {
            "node": "Audio6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "xPdI6TTCNjiv7gxo"
  },
  "versionId": "ab5ac658-6d65-48f6-a493-9d62ea1f1660",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "5cc0498e4c4648fe5fcc14e1fba628e63e36e1dc801a3fe4ac7b2612c7e46c39"
  },
  "id": "TcSAhsSXn3WIJFjL",
  "tags": []
}